#!/usr/bin/env ruby

# Copied from <https://github.com/nanoc/nanoc/blob/70b5726576c79f2eaf0c258c225fe8948dbe324a/lib/nanoc/filters/relativize_paths.rb>.
XHTML_RELPATH_SELECTORS = ['*/@href', '*/@src', 'object/@data', 'param[@name="movie"]/@content', 'form/@action', 'comment()'].freeze

# Preprocess {{{1

preprocess do
  create_archive_pages
  create_htag_pages('/tags/', items: articles)
  create_article_list_pages

  @items.each do |i|
    if title = i[:title]
      i[:title_raw] = title
      i[:title] = h title
    end
    if excerpt = i[:excerpt]
      i[:excerpt_raw] = excerpt
      i[:excerpt] = h excerpt
    end
  end
end

# }}}1

# sass partials.
ignore '/**/_*'


compile '/archive.xhtml' do
  layout '/archive-date.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/articles/**/*.xml' do
  filter :larry_xsl, xsl: '/xsl/easy-html.xsl'
  filter :colorize_syntax, default_colorizer: :pygmentsrb, syntax: :xml
  layout '/article.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/articles/**/*.xhtml' do
  filter :colorize_syntax, default_colorizer: :pygmentsrb
  layout '/article.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/assets/**/*.scss' do
  filter :sass, syntax: :scss
  filter :relativize_paths, type: :css
end

compile '/tags/index.xhtml.erb' do
  filter :erb
  layout '/page-base.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/tags/search.xhtml' do
  filter :colorize_syntax, default_colorizer: :pygmentsrb
  layout '/page-base.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/tags/**/*.xhtml' do
  layout '/htag-page.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/tags/**/*.json' do
  layout '/htag-key.json'
end

compile '/feed.xml' do
  filter :erb
end

compile '/list/index.xhtml' do
  layout '/archive-list-index.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/list/*.xhtml' do
  layout '/archive-list.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile %r[^/\d{4}/index\.xhtml] do
  layout '/archive-by-year.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile %r[^/\d{4}/\d{2}/index\.xhtml] do
  layout '/archive-by-year-month.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/**/*.xhtml' do
  layout '/page-base.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/**/*.xhtml.erb' do
  filter :erb
  layout '/page-base.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/**/*.json.erb' do
  filter :erb
end

compile '/**/*' do
end

# /articles/**/yyyy-mm-dd-slug/**/index.{xhtml,xml} => /yyyy/mm/dd/slug/**/index.xhtml
# /articles/**/yyyy-mm-dd-slug/**/*.{xhtml,xml} => /yyyy/mm/dd/slug/**/*/index.xhtml
route %r[^/articles/(?:[^/]+/)*(\d{4})-(\d{2})-(\d{2})-(.+?)(?:/index)?\.(?:xhtml|xml)$] do |yyyy, mm, dd, slug_relpath|
  "/#{yyyy}/#{mm}/#{dd}/#{slug_relpath}/index.xhtml"
end

# /articles/**/yyyy-mm-dd-slug/* => /yyyy/mm/dd/slug/*
route %r[^/articles/(?:[^/]+/)*(\d{4})-(\d{2})-(\d{2})-(.+)$] do |yyyy, mm, dd, slug_relpath|
  "/#{yyyy}/#{mm}/#{dd}/#{slug_relpath}"
end

route '/assets/**/*.scss' do
  @item.identifier.without_ext + '.css'
end

route '/assets/**/*' do
  @item.identifier.to_s
end

route '/**/*.{xhtml,json}.erb' do
  @item.identifier.without_ext
end

route '/**/*' do
  @item.identifier.to_s
end

layout '/**/*', :erb, trim_mode: '-'

# vim: set foldmethod=marker :
