---
created_at: 2017-08-20T18:37:12+0900
title: "Weekly report 2017-W34"
htags:
  - "日常/日記"
kind: article

excerpt: "2017年 第34週 まとめ"
---
<?xml version="1.0"?>
<eh:article
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:eh="https://www.cardina1.red/_ns/xml/easy-html/2017-0809"
	id="2017-08-26-weekly-2017-w34"
>
<eh:title>Weekly report 2017-W34</eh:title>
<p>
	2017-W33-6 (Sat) から 2017-W34-5 (Fri) までの日記。
</p>


<eh:section id="news">
	<eh:title>ニュース・知ったこと</eh:title>

	<eh:section id="gnu-social-nightly-update">
		<eh:title>GNU Social nightly update</eh:title>
		<ul>
			<li>
				<a href="https://git.gnu.io/gnu/gnu-social">gnu.io / gnu-social · GitLab</a>
			</li>
			<li>
				<a href="https://git.gnu.io/gnu/gnu-social/compare/d61375cb7fd9e3ac2dbba2b22d0d6461fb753892...d9fbc17f7745edb3e3eeddf6485f70b187df762f">d61375cb7fd9e3ac2dbba2b22d0d6461fb753892...d9fbc17f7745edb3e3eeddf6485f70b187df762f · gnu.io / gnu-social · GitLab</a>
			</li>
		</ul>
		<p>
			RabbitMQ とか stomp queue manager 関連の更新。
			私は DB queue manager 使ってるから関係ないや。
		</p>
	</eh:section>

	<eh:section>
		<eh:title>web サービスで予約すべきユーザ名とか</eh:title>
		<ul>
			<li>
				<a href="http://moznion.hatenadiary.com/entry/2017/04/10/192953">サービスを提供するにあたって取得されたくないアカウント名が集まっているライブラリが欲しいんですけど〜みたいな時 - その手の平は尻もつかめるさ</a>
				<ul>
					<li>
						<a href="https://github.com/marteinn/The-Big-Username-Blacklist"><eh:emoji fontawesome="github" /> marteinn/The-Big-Username-Blacklist: This is a opinionated blacklist of words that you might not like to see used as usernames in your service.</a>
					</li>
					<li>
						<a href="https://github.com/shouldbee/reserved-usernames"><eh:emoji fontawesome="github" /> shouldbee/reserved-usernames: 590+ usernames in this dictionary! A list of reserved usernames to prevent url collision with resource paths. This repository hosts the list in multiple formats like JSON, CSV, SQL and plain text. You can use its just download its by wget.</a>
					</li>
					<li>
						<a href="https://github.com/rono23/reserved_word"><eh:emoji fontawesome="github" /> rono23/reserved_word: Make your reserved words on Rails.</a>
					</li>
				</ul>
			</li>
			<li>
				<a href="http://qiita.com/phimcall/items/4c559b70f70ea7f1953b">登録されるとつらいユーザー名リスト - Qiita</a>
				<ul>
					<li>
						<a href="https://dev.twitter.com/rest/reference/get/help/configuration">GET help/configuration — Twitter Developers</a> (<code>non_username_paths</code>)
					</li>
					<li>
						<a href="https://github.com/LDNOOBW/List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words"><eh:emoji fontawesome="github" /> LDNOOBW/List-of-Dirty-Naughty-Obscene-and-Otherwise-Bad-Words: List of Dirty, Naughty, Obscene, and Otherwise Bad Words</a>
					</li>
					<li>
						<a href="https://www.slideshare.net/tadsan/ss-31387472">これからの名前の話をしよう</a>
					</li>
				</ul>
			</li>
		</ul>
		<p>
			個人的には<a href="https://www.slideshare.net/tadsan/ss-31387472">これからの名前の話をしよう</a>に同意で、以下のようなスタンス。
		</p>
		<ul>
			<li>
				<code>logout</code> とか <code>about</code> とか <code>api</code> みたいな名前がユーザ名と混同されうる URL 設計がそもそも間違い
				<ul>
					<li>
						サービス側で意図をもって用意する文字列と、ユーザが指定する(サービスにとっては識別子以上の意味がない)文字列を、対等に扱うべきでない
					</li>
				</ul>
			</li>
			<li>
				とはいえ <code>support</code> とか <code>admin</code> みたいに、人間から見たときの意味がアレなやつは登録を拒否したい場合もあるよね
			</li>
		</ul>
		<p>
			それゆえ、本当は <code>api</code> みたいな、駄目駄目な URL 設計で防ぎたいような識別子とかは(私には)どうでもよくて、 <code>support</code> とかの人間サイドの理由で登録阻止したい ID 群だけのリストが欲しい。
			もちろん、駄目駄目な URL になっていないことをテストするためには <code>api</code> とかのリストもテストケースとして欲しいが、これは運用とは別の話だ。
		</p>
	</eh:section>
</eh:section>

<eh:section id="public-activities">
	<eh:title>ﾊﾟﾌﾞﾘｯｸ活動</eh:title>

	<eh:section id="strum-pullrequest">
		<eh:title>strum にプルリク出した (merge された)</eh:title>
		<ul>
			<li>
				<a href="https://github.com/Peternator7/strum"><eh:emoji fontawesome="github" /> Peternator7/strum</a>
			</li>
			<li>
				<a href="https://github.com/Peternator7/strum/pull/10">Add `derive(AsRefStr)` implementation by lo48576 · Pull Request #10 · Peternator7/strum</a>
			</li>
		</ul>

		<p>
			Rust の enum に、文字列からの変換や文字列への変換といった機能を付与できる custom derive を提供する crate 。
		</p>
		<p>
			<code>derive(ToString)</code> で <code>std::string::ToString</code> が実装されるので、だったら <code>std::convert::AsRef&lt;str&gt;</code> を実装してくれる custom derive があってもよくね？……ということでパッチを送った。
		</p>
		<p>
			merge された変更は <a href="https://crates.io/crates/strum/0.8.0">strum 0.8.0</a> で publish された。
		</p>
	</eh:section>
</eh:section>

<eh:section id="private-activities">
	<eh:title>私的活動</eh:title>

	<eh:section id="progress-rustivitypub">
		<eh:title>進捗: rustivitypub</eh:title>
		<ul>
			<li>
				<a href="https://github.com/lo48576/rustivitypub"><eh:emoji fontawesome="github" /> lo48576/rustivitypub: [WIP] ActivityPub implementation for Rust programming language</a>
			</li>
		</ul>

		<p>
			Rust で <a href="https://www.w3.org/TR/2017/CR-activitypub-20170509/">ActivityPub</a> の実装をしたかったので開始した。
		</p>
	</eh:section>
</eh:section>

</eh:article>
